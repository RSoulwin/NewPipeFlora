// Generated by view binder compiler. Do not edit!
package org.schabi.newpipelegacy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.fragment.app.FragmentContainerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.imageview.ShapeableImageView;
import com.google.android.material.tabs.TabLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.schabi.newpipelegacy.R;
import org.schabi.newpipelegacy.views.AnimatedProgressBar;
import org.schabi.newpipelegacy.views.NewPipeTextView;

public final class FragmentVideoDetailBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final AppBarLayout appBarLayout;

  @NonNull
  public final LinearLayout detailContentRootHiding;

  @NonNull
  public final RelativeLayout detailContentRootLayout;

  @NonNull
  public final LinearLayout detailControlPanel;

  @NonNull
  public final NewPipeTextView detailControlsBackground;

  @NonNull
  public final NewPipeTextView detailControlsCrashThePlayer;

  @NonNull
  public final NewPipeTextView detailControlsDownload;

  @NonNull
  public final NewPipeTextView detailControlsOpenInBrowser;

  @NonNull
  public final NewPipeTextView detailControlsPlayWithKodi;

  @NonNull
  public final NewPipeTextView detailControlsPlaylistAppend;

  @NonNull
  public final NewPipeTextView detailControlsPopup;

  @NonNull
  public final NewPipeTextView detailControlsShare;

  @NonNull
  public final NewPipeTextView detailDurationView;

  @NonNull
  public final View detailMainContent;

  @NonNull
  public final View detailMetaInfoSeparator;

  @NonNull
  public final NewPipeTextView detailMetaInfoTextView;

  @NonNull
  public final NewPipeTextView detailPositionView;

  @NonNull
  public final RelativeLayout detailRoot;

  @NonNull
  public final LinearLayout detailSecondaryControlPanel;

  @NonNull
  public final NewPipeTextView detailSubChannelTextView;

  @NonNull
  public final ShapeableImageView detailSubChannelThumbnailView;

  @NonNull
  public final ImageView detailThumbnailImageView;

  @NonNull
  public final ImageView detailThumbnailPlayButton;

  @NonNull
  public final FrameLayout detailThumbnailRootLayout;

  @NonNull
  public final NewPipeTextView detailThumbsDisabledView;

  @NonNull
  public final NewPipeTextView detailThumbsDownCountView;

  @NonNull
  public final ImageView detailThumbsDownImgView;

  @NonNull
  public final NewPipeTextView detailThumbsUpCountView;

  @NonNull
  public final ImageView detailThumbsUpImgView;

  @NonNull
  public final FrameLayout detailTitleRootLayout;

  @NonNull
  public final ImageView detailToggleSecondaryControlsView;

  @NonNull
  public final LinearLayout detailUploaderRootLayout;

  @NonNull
  public final NewPipeTextView detailUploaderTextView;

  @NonNull
  public final ShapeableImageView detailUploaderThumbnailView;

  @NonNull
  public final NewPipeTextView detailVideoTitleView;

  @NonNull
  public final NewPipeTextView detailViewCountView;

  @NonNull
  public final RelativeLayout detailsPanel;

  @NonNull
  public final ErrorPanelBinding errorPanel;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final LinearLayout overlayButtonsLayout;

  @NonNull
  public final NewPipeTextView overlayChannelTextView;

  @NonNull
  public final ImageButton overlayCloseButton;

  @NonNull
  public final RelativeLayout overlayLayout;

  @NonNull
  public final LinearLayout overlayMetadataLayout;

  @NonNull
  public final ImageButton overlayPlayPauseButton;

  @NonNull
  public final ImageButton overlayPlayQueueButton;

  @NonNull
  public final ImageButton overlayThumbnail;

  @NonNull
  public final NewPipeTextView overlayTitleTextView;

  @NonNull
  public final FrameLayout playerPlaceholder;

  @NonNull
  public final AnimatedProgressBar positionView;

  /**
   * This binding is not available in all configurations.
   * <p>
   * Present:
   * <ul>
   *   <li>layout-large-land/</li>
   * </ul>
   *
   * Absent:
   * <ul>
   *   <li>layout/</li>
   * </ul>
   */
  @Nullable
  public final FragmentContainerView relatedItemsLayout;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final NewPipeTextView touchAppendDetail;

  @NonNull
  public final FrameLayout videoItemDetail;

  @NonNull
  public final ViewPager viewPager;

  private FragmentVideoDetailBinding(@NonNull FrameLayout rootView,
      @NonNull AppBarLayout appBarLayout, @NonNull LinearLayout detailContentRootHiding,
      @NonNull RelativeLayout detailContentRootLayout, @NonNull LinearLayout detailControlPanel,
      @NonNull NewPipeTextView detailControlsBackground,
      @NonNull NewPipeTextView detailControlsCrashThePlayer,
      @NonNull NewPipeTextView detailControlsDownload,
      @NonNull NewPipeTextView detailControlsOpenInBrowser,
      @NonNull NewPipeTextView detailControlsPlayWithKodi,
      @NonNull NewPipeTextView detailControlsPlaylistAppend,
      @NonNull NewPipeTextView detailControlsPopup, @NonNull NewPipeTextView detailControlsShare,
      @NonNull NewPipeTextView detailDurationView, @NonNull View detailMainContent,
      @NonNull View detailMetaInfoSeparator, @NonNull NewPipeTextView detailMetaInfoTextView,
      @NonNull NewPipeTextView detailPositionView, @NonNull RelativeLayout detailRoot,
      @NonNull LinearLayout detailSecondaryControlPanel,
      @NonNull NewPipeTextView detailSubChannelTextView,
      @NonNull ShapeableImageView detailSubChannelThumbnailView,
      @NonNull ImageView detailThumbnailImageView, @NonNull ImageView detailThumbnailPlayButton,
      @NonNull FrameLayout detailThumbnailRootLayout,
      @NonNull NewPipeTextView detailThumbsDisabledView,
      @NonNull NewPipeTextView detailThumbsDownCountView,
      @NonNull ImageView detailThumbsDownImgView, @NonNull NewPipeTextView detailThumbsUpCountView,
      @NonNull ImageView detailThumbsUpImgView, @NonNull FrameLayout detailTitleRootLayout,
      @NonNull ImageView detailToggleSecondaryControlsView,
      @NonNull LinearLayout detailUploaderRootLayout,
      @NonNull NewPipeTextView detailUploaderTextView,
      @NonNull ShapeableImageView detailUploaderThumbnailView,
      @NonNull NewPipeTextView detailVideoTitleView, @NonNull NewPipeTextView detailViewCountView,
      @NonNull RelativeLayout detailsPanel, @NonNull ErrorPanelBinding errorPanel,
      @NonNull ProgressBar loadingProgressBar, @NonNull LinearLayout overlayButtonsLayout,
      @NonNull NewPipeTextView overlayChannelTextView, @NonNull ImageButton overlayCloseButton,
      @NonNull RelativeLayout overlayLayout, @NonNull LinearLayout overlayMetadataLayout,
      @NonNull ImageButton overlayPlayPauseButton, @NonNull ImageButton overlayPlayQueueButton,
      @NonNull ImageButton overlayThumbnail, @NonNull NewPipeTextView overlayTitleTextView,
      @NonNull FrameLayout playerPlaceholder, @NonNull AnimatedProgressBar positionView,
      @Nullable FragmentContainerView relatedItemsLayout, @NonNull TabLayout tabLayout,
      @NonNull NewPipeTextView touchAppendDetail, @NonNull FrameLayout videoItemDetail,
      @NonNull ViewPager viewPager) {
    this.rootView = rootView;
    this.appBarLayout = appBarLayout;
    this.detailContentRootHiding = detailContentRootHiding;
    this.detailContentRootLayout = detailContentRootLayout;
    this.detailControlPanel = detailControlPanel;
    this.detailControlsBackground = detailControlsBackground;
    this.detailControlsCrashThePlayer = detailControlsCrashThePlayer;
    this.detailControlsDownload = detailControlsDownload;
    this.detailControlsOpenInBrowser = detailControlsOpenInBrowser;
    this.detailControlsPlayWithKodi = detailControlsPlayWithKodi;
    this.detailControlsPlaylistAppend = detailControlsPlaylistAppend;
    this.detailControlsPopup = detailControlsPopup;
    this.detailControlsShare = detailControlsShare;
    this.detailDurationView = detailDurationView;
    this.detailMainContent = detailMainContent;
    this.detailMetaInfoSeparator = detailMetaInfoSeparator;
    this.detailMetaInfoTextView = detailMetaInfoTextView;
    this.detailPositionView = detailPositionView;
    this.detailRoot = detailRoot;
    this.detailSecondaryControlPanel = detailSecondaryControlPanel;
    this.detailSubChannelTextView = detailSubChannelTextView;
    this.detailSubChannelThumbnailView = detailSubChannelThumbnailView;
    this.detailThumbnailImageView = detailThumbnailImageView;
    this.detailThumbnailPlayButton = detailThumbnailPlayButton;
    this.detailThumbnailRootLayout = detailThumbnailRootLayout;
    this.detailThumbsDisabledView = detailThumbsDisabledView;
    this.detailThumbsDownCountView = detailThumbsDownCountView;
    this.detailThumbsDownImgView = detailThumbsDownImgView;
    this.detailThumbsUpCountView = detailThumbsUpCountView;
    this.detailThumbsUpImgView = detailThumbsUpImgView;
    this.detailTitleRootLayout = detailTitleRootLayout;
    this.detailToggleSecondaryControlsView = detailToggleSecondaryControlsView;
    this.detailUploaderRootLayout = detailUploaderRootLayout;
    this.detailUploaderTextView = detailUploaderTextView;
    this.detailUploaderThumbnailView = detailUploaderThumbnailView;
    this.detailVideoTitleView = detailVideoTitleView;
    this.detailViewCountView = detailViewCountView;
    this.detailsPanel = detailsPanel;
    this.errorPanel = errorPanel;
    this.loadingProgressBar = loadingProgressBar;
    this.overlayButtonsLayout = overlayButtonsLayout;
    this.overlayChannelTextView = overlayChannelTextView;
    this.overlayCloseButton = overlayCloseButton;
    this.overlayLayout = overlayLayout;
    this.overlayMetadataLayout = overlayMetadataLayout;
    this.overlayPlayPauseButton = overlayPlayPauseButton;
    this.overlayPlayQueueButton = overlayPlayQueueButton;
    this.overlayThumbnail = overlayThumbnail;
    this.overlayTitleTextView = overlayTitleTextView;
    this.playerPlaceholder = playerPlaceholder;
    this.positionView = positionView;
    this.relatedItemsLayout = relatedItemsLayout;
    this.tabLayout = tabLayout;
    this.touchAppendDetail = touchAppendDetail;
    this.videoItemDetail = videoItemDetail;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentVideoDetailBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentVideoDetailBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_video_detail, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentVideoDetailBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.app_bar_layout;
      AppBarLayout appBarLayout = ViewBindings.findChildViewById(rootView, id);
      if (appBarLayout == null) {
        break missingId;
      }

      id = R.id.detail_content_root_hiding;
      LinearLayout detailContentRootHiding = ViewBindings.findChildViewById(rootView, id);
      if (detailContentRootHiding == null) {
        break missingId;
      }

      id = R.id.detail_content_root_layout;
      RelativeLayout detailContentRootLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailContentRootLayout == null) {
        break missingId;
      }

      id = R.id.detail_control_panel;
      LinearLayout detailControlPanel = ViewBindings.findChildViewById(rootView, id);
      if (detailControlPanel == null) {
        break missingId;
      }

      id = R.id.detail_controls_background;
      NewPipeTextView detailControlsBackground = ViewBindings.findChildViewById(rootView, id);
      if (detailControlsBackground == null) {
        break missingId;
      }

      id = R.id.detail_controls_crash_the_player;
      NewPipeTextView detailControlsCrashThePlayer = ViewBindings.findChildViewById(rootView, id);
      if (detailControlsCrashThePlayer == null) {
        break missingId;
      }

      id = R.id.detail_controls_download;
      NewPipeTextView detailControlsDownload = ViewBindings.findChildViewById(rootView, id);
      if (detailControlsDownload == null) {
        break missingId;
      }

      id = R.id.detail_controls_open_in_browser;
      NewPipeTextView detailControlsOpenInBrowser = ViewBindings.findChildViewById(rootView, id);
      if (detailControlsOpenInBrowser == null) {
        break missingId;
      }

      id = R.id.detail_controls_play_with_kodi;
      NewPipeTextView detailControlsPlayWithKodi = ViewBindings.findChildViewById(rootView, id);
      if (detailControlsPlayWithKodi == null) {
        break missingId;
      }

      id = R.id.detail_controls_playlist_append;
      NewPipeTextView detailControlsPlaylistAppend = ViewBindings.findChildViewById(rootView, id);
      if (detailControlsPlaylistAppend == null) {
        break missingId;
      }

      id = R.id.detail_controls_popup;
      NewPipeTextView detailControlsPopup = ViewBindings.findChildViewById(rootView, id);
      if (detailControlsPopup == null) {
        break missingId;
      }

      id = R.id.detail_controls_share;
      NewPipeTextView detailControlsShare = ViewBindings.findChildViewById(rootView, id);
      if (detailControlsShare == null) {
        break missingId;
      }

      id = R.id.detail_duration_view;
      NewPipeTextView detailDurationView = ViewBindings.findChildViewById(rootView, id);
      if (detailDurationView == null) {
        break missingId;
      }

      id = R.id.detail_main_content;
      View detailMainContent = ViewBindings.findChildViewById(rootView, id);
      if (detailMainContent == null) {
        break missingId;
      }

      id = R.id.detail_meta_info_separator;
      View detailMetaInfoSeparator = ViewBindings.findChildViewById(rootView, id);
      if (detailMetaInfoSeparator == null) {
        break missingId;
      }

      id = R.id.detail_meta_info_text_view;
      NewPipeTextView detailMetaInfoTextView = ViewBindings.findChildViewById(rootView, id);
      if (detailMetaInfoTextView == null) {
        break missingId;
      }

      id = R.id.detail_position_view;
      NewPipeTextView detailPositionView = ViewBindings.findChildViewById(rootView, id);
      if (detailPositionView == null) {
        break missingId;
      }

      id = R.id.detail_root;
      RelativeLayout detailRoot = ViewBindings.findChildViewById(rootView, id);
      if (detailRoot == null) {
        break missingId;
      }

      id = R.id.detail_secondary_control_panel;
      LinearLayout detailSecondaryControlPanel = ViewBindings.findChildViewById(rootView, id);
      if (detailSecondaryControlPanel == null) {
        break missingId;
      }

      id = R.id.detail_sub_channel_text_view;
      NewPipeTextView detailSubChannelTextView = ViewBindings.findChildViewById(rootView, id);
      if (detailSubChannelTextView == null) {
        break missingId;
      }

      id = R.id.detail_sub_channel_thumbnail_view;
      ShapeableImageView detailSubChannelThumbnailView = ViewBindings.findChildViewById(rootView, id);
      if (detailSubChannelThumbnailView == null) {
        break missingId;
      }

      id = R.id.detail_thumbnail_image_view;
      ImageView detailThumbnailImageView = ViewBindings.findChildViewById(rootView, id);
      if (detailThumbnailImageView == null) {
        break missingId;
      }

      id = R.id.detail_thumbnail_play_button;
      ImageView detailThumbnailPlayButton = ViewBindings.findChildViewById(rootView, id);
      if (detailThumbnailPlayButton == null) {
        break missingId;
      }

      id = R.id.detail_thumbnail_root_layout;
      FrameLayout detailThumbnailRootLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailThumbnailRootLayout == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_disabled_view;
      NewPipeTextView detailThumbsDisabledView = ViewBindings.findChildViewById(rootView, id);
      if (detailThumbsDisabledView == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_down_count_view;
      NewPipeTextView detailThumbsDownCountView = ViewBindings.findChildViewById(rootView, id);
      if (detailThumbsDownCountView == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_down_img_view;
      ImageView detailThumbsDownImgView = ViewBindings.findChildViewById(rootView, id);
      if (detailThumbsDownImgView == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_up_count_view;
      NewPipeTextView detailThumbsUpCountView = ViewBindings.findChildViewById(rootView, id);
      if (detailThumbsUpCountView == null) {
        break missingId;
      }

      id = R.id.detail_thumbs_up_img_view;
      ImageView detailThumbsUpImgView = ViewBindings.findChildViewById(rootView, id);
      if (detailThumbsUpImgView == null) {
        break missingId;
      }

      id = R.id.detail_title_root_layout;
      FrameLayout detailTitleRootLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailTitleRootLayout == null) {
        break missingId;
      }

      id = R.id.detail_toggle_secondary_controls_view;
      ImageView detailToggleSecondaryControlsView = ViewBindings.findChildViewById(rootView, id);
      if (detailToggleSecondaryControlsView == null) {
        break missingId;
      }

      id = R.id.detail_uploader_root_layout;
      LinearLayout detailUploaderRootLayout = ViewBindings.findChildViewById(rootView, id);
      if (detailUploaderRootLayout == null) {
        break missingId;
      }

      id = R.id.detail_uploader_text_view;
      NewPipeTextView detailUploaderTextView = ViewBindings.findChildViewById(rootView, id);
      if (detailUploaderTextView == null) {
        break missingId;
      }

      id = R.id.detail_uploader_thumbnail_view;
      ShapeableImageView detailUploaderThumbnailView = ViewBindings.findChildViewById(rootView, id);
      if (detailUploaderThumbnailView == null) {
        break missingId;
      }

      id = R.id.detail_video_title_view;
      NewPipeTextView detailVideoTitleView = ViewBindings.findChildViewById(rootView, id);
      if (detailVideoTitleView == null) {
        break missingId;
      }

      id = R.id.detail_view_count_view;
      NewPipeTextView detailViewCountView = ViewBindings.findChildViewById(rootView, id);
      if (detailViewCountView == null) {
        break missingId;
      }

      id = R.id.details_panel;
      RelativeLayout detailsPanel = ViewBindings.findChildViewById(rootView, id);
      if (detailsPanel == null) {
        break missingId;
      }

      id = R.id.error_panel;
      View errorPanel = ViewBindings.findChildViewById(rootView, id);
      if (errorPanel == null) {
        break missingId;
      }
      ErrorPanelBinding binding_errorPanel = ErrorPanelBinding.bind(errorPanel);

      id = R.id.loading_progress_bar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.overlay_buttons_layout;
      LinearLayout overlayButtonsLayout = ViewBindings.findChildViewById(rootView, id);
      if (overlayButtonsLayout == null) {
        break missingId;
      }

      id = R.id.overlay_channel_text_view;
      NewPipeTextView overlayChannelTextView = ViewBindings.findChildViewById(rootView, id);
      if (overlayChannelTextView == null) {
        break missingId;
      }

      id = R.id.overlay_close_button;
      ImageButton overlayCloseButton = ViewBindings.findChildViewById(rootView, id);
      if (overlayCloseButton == null) {
        break missingId;
      }

      id = R.id.overlay_layout;
      RelativeLayout overlayLayout = ViewBindings.findChildViewById(rootView, id);
      if (overlayLayout == null) {
        break missingId;
      }

      id = R.id.overlay_metadata_layout;
      LinearLayout overlayMetadataLayout = ViewBindings.findChildViewById(rootView, id);
      if (overlayMetadataLayout == null) {
        break missingId;
      }

      id = R.id.overlay_play_pause_button;
      ImageButton overlayPlayPauseButton = ViewBindings.findChildViewById(rootView, id);
      if (overlayPlayPauseButton == null) {
        break missingId;
      }

      id = R.id.overlay_play_queue_button;
      ImageButton overlayPlayQueueButton = ViewBindings.findChildViewById(rootView, id);
      if (overlayPlayQueueButton == null) {
        break missingId;
      }

      id = R.id.overlay_thumbnail;
      ImageButton overlayThumbnail = ViewBindings.findChildViewById(rootView, id);
      if (overlayThumbnail == null) {
        break missingId;
      }

      id = R.id.overlay_title_text_view;
      NewPipeTextView overlayTitleTextView = ViewBindings.findChildViewById(rootView, id);
      if (overlayTitleTextView == null) {
        break missingId;
      }

      id = R.id.player_placeholder;
      FrameLayout playerPlaceholder = ViewBindings.findChildViewById(rootView, id);
      if (playerPlaceholder == null) {
        break missingId;
      }

      id = R.id.position_view;
      AnimatedProgressBar positionView = ViewBindings.findChildViewById(rootView, id);
      if (positionView == null) {
        break missingId;
      }

      id = R.id.relatedItemsLayout;
      FragmentContainerView relatedItemsLayout = ViewBindings.findChildViewById(rootView, id);

      id = R.id.tab_layout;
      TabLayout tabLayout = ViewBindings.findChildViewById(rootView, id);
      if (tabLayout == null) {
        break missingId;
      }

      id = R.id.touch_append_detail;
      NewPipeTextView touchAppendDetail = ViewBindings.findChildViewById(rootView, id);
      if (touchAppendDetail == null) {
        break missingId;
      }

      FrameLayout videoItemDetail = (FrameLayout) rootView;

      id = R.id.view_pager;
      ViewPager viewPager = ViewBindings.findChildViewById(rootView, id);
      if (viewPager == null) {
        break missingId;
      }

      return new FragmentVideoDetailBinding((FrameLayout) rootView, appBarLayout,
          detailContentRootHiding, detailContentRootLayout, detailControlPanel,
          detailControlsBackground, detailControlsCrashThePlayer, detailControlsDownload,
          detailControlsOpenInBrowser, detailControlsPlayWithKodi, detailControlsPlaylistAppend,
          detailControlsPopup, detailControlsShare, detailDurationView, detailMainContent,
          detailMetaInfoSeparator, detailMetaInfoTextView, detailPositionView, detailRoot,
          detailSecondaryControlPanel, detailSubChannelTextView, detailSubChannelThumbnailView,
          detailThumbnailImageView, detailThumbnailPlayButton, detailThumbnailRootLayout,
          detailThumbsDisabledView, detailThumbsDownCountView, detailThumbsDownImgView,
          detailThumbsUpCountView, detailThumbsUpImgView, detailTitleRootLayout,
          detailToggleSecondaryControlsView, detailUploaderRootLayout, detailUploaderTextView,
          detailUploaderThumbnailView, detailVideoTitleView, detailViewCountView, detailsPanel,
          binding_errorPanel, loadingProgressBar, overlayButtonsLayout, overlayChannelTextView,
          overlayCloseButton, overlayLayout, overlayMetadataLayout, overlayPlayPauseButton,
          overlayPlayQueueButton, overlayThumbnail, overlayTitleTextView, playerPlaceholder,
          positionView, relatedItemsLayout, tabLayout, touchAppendDetail, videoItemDetail,
          viewPager);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
