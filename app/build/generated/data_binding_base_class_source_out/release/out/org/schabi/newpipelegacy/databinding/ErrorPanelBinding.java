// Generated by view binder compiler. Do not edit!
package org.schabi.newpipelegacy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.schabi.newpipelegacy.R;
import org.schabi.newpipelegacy.views.NewPipeTextView;

public final class ErrorPanelBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button errorActionButton;

  @NonNull
  public final NewPipeTextView errorMessageServiceExplanationView;

  @NonNull
  public final NewPipeTextView errorMessageServiceInfoView;

  @NonNull
  public final NewPipeTextView errorMessageView;

  @NonNull
  public final Button errorRetryButton;

  private ErrorPanelBinding(@NonNull LinearLayout rootView, @NonNull Button errorActionButton,
      @NonNull NewPipeTextView errorMessageServiceExplanationView,
      @NonNull NewPipeTextView errorMessageServiceInfoView,
      @NonNull NewPipeTextView errorMessageView, @NonNull Button errorRetryButton) {
    this.rootView = rootView;
    this.errorActionButton = errorActionButton;
    this.errorMessageServiceExplanationView = errorMessageServiceExplanationView;
    this.errorMessageServiceInfoView = errorMessageServiceInfoView;
    this.errorMessageView = errorMessageView;
    this.errorRetryButton = errorRetryButton;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ErrorPanelBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ErrorPanelBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.error_panel, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ErrorPanelBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.error_action_button;
      Button errorActionButton = ViewBindings.findChildViewById(rootView, id);
      if (errorActionButton == null) {
        break missingId;
      }

      id = R.id.error_message_service_explanation_view;
      NewPipeTextView errorMessageServiceExplanationView = ViewBindings.findChildViewById(rootView, id);
      if (errorMessageServiceExplanationView == null) {
        break missingId;
      }

      id = R.id.error_message_service_info_view;
      NewPipeTextView errorMessageServiceInfoView = ViewBindings.findChildViewById(rootView, id);
      if (errorMessageServiceInfoView == null) {
        break missingId;
      }

      id = R.id.error_message_view;
      NewPipeTextView errorMessageView = ViewBindings.findChildViewById(rootView, id);
      if (errorMessageView == null) {
        break missingId;
      }

      id = R.id.error_retry_button;
      Button errorRetryButton = ViewBindings.findChildViewById(rootView, id);
      if (errorRetryButton == null) {
        break missingId;
      }

      return new ErrorPanelBinding((LinearLayout) rootView, errorActionButton,
          errorMessageServiceExplanationView, errorMessageServiceInfoView, errorMessageView,
          errorRetryButton);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
