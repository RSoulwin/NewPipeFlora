// Generated by view binder compiler. Do not edit!
package org.schabi.newpipelegacy.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.RelativeLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.schabi.newpipelegacy.R;
import org.schabi.newpipelegacy.views.NewPipeTextView;

public final class FragmentFeedBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ListEmptyViewBinding emptyStateView;

  @NonNull
  public final ErrorPanelBinding errorPanel;

  @NonNull
  public final RecyclerView itemsList;

  @NonNull
  public final ProgressBar loadingProgressBar;

  @NonNull
  public final NewPipeTextView loadingProgressText;

  @NonNull
  public final Button newItemsLoadedButton;

  @NonNull
  public final ImageView refreshIcon;

  @NonNull
  public final LinearLayout refreshInfoContainer;

  @NonNull
  public final RelativeLayout refreshRootView;

  @NonNull
  public final NewPipeTextView refreshSubtitleText;

  @NonNull
  public final NewPipeTextView refreshText;

  @NonNull
  public final SwipeRefreshLayout swipeRefreshLayout;

  private FragmentFeedBinding(@NonNull RelativeLayout rootView,
      @NonNull ListEmptyViewBinding emptyStateView, @NonNull ErrorPanelBinding errorPanel,
      @NonNull RecyclerView itemsList, @NonNull ProgressBar loadingProgressBar,
      @NonNull NewPipeTextView loadingProgressText, @NonNull Button newItemsLoadedButton,
      @NonNull ImageView refreshIcon, @NonNull LinearLayout refreshInfoContainer,
      @NonNull RelativeLayout refreshRootView, @NonNull NewPipeTextView refreshSubtitleText,
      @NonNull NewPipeTextView refreshText, @NonNull SwipeRefreshLayout swipeRefreshLayout) {
    this.rootView = rootView;
    this.emptyStateView = emptyStateView;
    this.errorPanel = errorPanel;
    this.itemsList = itemsList;
    this.loadingProgressBar = loadingProgressBar;
    this.loadingProgressText = loadingProgressText;
    this.newItemsLoadedButton = newItemsLoadedButton;
    this.refreshIcon = refreshIcon;
    this.refreshInfoContainer = refreshInfoContainer;
    this.refreshRootView = refreshRootView;
    this.refreshSubtitleText = refreshSubtitleText;
    this.refreshText = refreshText;
    this.swipeRefreshLayout = swipeRefreshLayout;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentFeedBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentFeedBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_feed, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentFeedBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.empty_state_view;
      View emptyStateView = ViewBindings.findChildViewById(rootView, id);
      if (emptyStateView == null) {
        break missingId;
      }
      ListEmptyViewBinding binding_emptyStateView = ListEmptyViewBinding.bind(emptyStateView);

      id = R.id.error_panel;
      View errorPanel = ViewBindings.findChildViewById(rootView, id);
      if (errorPanel == null) {
        break missingId;
      }
      ErrorPanelBinding binding_errorPanel = ErrorPanelBinding.bind(errorPanel);

      id = R.id.items_list;
      RecyclerView itemsList = ViewBindings.findChildViewById(rootView, id);
      if (itemsList == null) {
        break missingId;
      }

      id = R.id.loading_progress_bar;
      ProgressBar loadingProgressBar = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressBar == null) {
        break missingId;
      }

      id = R.id.loading_progress_text;
      NewPipeTextView loadingProgressText = ViewBindings.findChildViewById(rootView, id);
      if (loadingProgressText == null) {
        break missingId;
      }

      id = R.id.new_items_loaded_button;
      Button newItemsLoadedButton = ViewBindings.findChildViewById(rootView, id);
      if (newItemsLoadedButton == null) {
        break missingId;
      }

      id = R.id.refreshIcon;
      ImageView refreshIcon = ViewBindings.findChildViewById(rootView, id);
      if (refreshIcon == null) {
        break missingId;
      }

      id = R.id.refresh_info_container;
      LinearLayout refreshInfoContainer = ViewBindings.findChildViewById(rootView, id);
      if (refreshInfoContainer == null) {
        break missingId;
      }

      id = R.id.refresh_root_view;
      RelativeLayout refreshRootView = ViewBindings.findChildViewById(rootView, id);
      if (refreshRootView == null) {
        break missingId;
      }

      id = R.id.refresh_subtitle_text;
      NewPipeTextView refreshSubtitleText = ViewBindings.findChildViewById(rootView, id);
      if (refreshSubtitleText == null) {
        break missingId;
      }

      id = R.id.refresh_text;
      NewPipeTextView refreshText = ViewBindings.findChildViewById(rootView, id);
      if (refreshText == null) {
        break missingId;
      }

      id = R.id.swipeRefreshLayout;
      SwipeRefreshLayout swipeRefreshLayout = ViewBindings.findChildViewById(rootView, id);
      if (swipeRefreshLayout == null) {
        break missingId;
      }

      return new FragmentFeedBinding((RelativeLayout) rootView, binding_emptyStateView,
          binding_errorPanel, itemsList, loadingProgressBar, loadingProgressText,
          newItemsLoadedButton, refreshIcon, refreshInfoContainer, refreshRootView,
          refreshSubtitleText, refreshText, swipeRefreshLayout);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
